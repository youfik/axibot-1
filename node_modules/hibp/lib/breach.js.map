{"version":3,"sources":["../src/breach.js"],"names":["breach","encodeURIComponent","breachName"],"mappings":";;;;;;;AAAA;;;;AAEA;;;;;;;;;;;;;;;;;;;;AAoBA,IAAMA,SAAS,SAATA,MAAS;AAAA,SACb,wCAAwBC,mBAAmBC,UAAnB,CAAxB,CADa;AAAA,CAAf;AAGA;;;;;;;;;eAOeF,M","sourcesContent":["import fetchFromApi from './internal/haveibeenpwned/fetchFromApi';\n\n/**\n * Fetches data for a specific breach event.\n *\n * @param {string} breachName the name of a breach in the system\n * @returns {Promise} a Promise which resolves to an object representing a\n * breach (or null if no breach was found), or rejects with an Error\n * @example\n * breach('Adobe')\n *   .then(data => {\n *     if (data) {\n *       // ...\n *     } else {\n *       // ...\n *     }\n *   })\n *   .catch(err => {\n *     // ...\n *   });\n * @alias module:breach\n */\nconst breach = breachName =>\n  fetchFromApi(`/breach/${encodeURIComponent(breachName)}`);\n\n/**\n * A module for retrieving data for a specific breach event.\n *\n * @module breach\n * @example\n * import { breach } from 'hibp';\n */\nexport default breach;\n"],"file":"breach.js"}