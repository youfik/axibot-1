"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _axiosInstance = _interopRequireDefault(require("./axiosInstance"));

var _responses = require("./responses");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Fetches data from the supplied API endpoint.
 *
 * HTTP status code 200 returns an Object (data found).
 * HTTP status code 404 returns null (no data found).
 * HTTP status code 400 throws an Error (bad request).
 * HTTP status code 403 throws an Error (forbidden).
 * HTTP status code 429 throws an Error (too many requests).
 *
 * @private
 * @param {string} endpoint the API endpoint to query
 * @returns {Promise} a Promise which resolves to the data resulting from the
 * query (or null for 404 Not Found responses), or rejects with an Error
 */
var _default = function _default(endpoint) {
  return Promise.resolve(_axiosInstance.default.get(endpoint)).then(function (res) {
    return res.data;
  }).catch(function (err) {
    if (err.response) {
      switch (err.response.status) {
        case _responses.BAD_REQUEST.status:
          throw new Error(_responses.BAD_REQUEST.statusText);

        case _responses.FORBIDDEN.status:
          throw new Error(_responses.FORBIDDEN.statusText);

        case _responses.NOT_FOUND.status:
          return null;

        case _responses.TOO_MANY_REQUESTS.status:
          throw new Error(err.response.data);

        default:
          throw new Error(err.response.statusText);
      }
    } else {
      throw err;
    }
  });
};

exports.default = _default;
//# sourceMappingURL=fetchFromApi.js.map